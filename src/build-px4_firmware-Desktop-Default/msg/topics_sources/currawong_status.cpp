/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file currawong_status.msg */


#include <inttypes.h>
#include <px4_log.h>
#include <px4_defines.h>
#include <uORB/topics/currawong_status.h>
#include <drivers/drv_hrt.h>
#include <lib/drivers/device/Device.hpp>

constexpr char __orb_currawong_status_fields[] = "uint64_t timestamp;float throttle_pct;uint32_t fuel_used_ml;float baro_kpa;float manifold_kpa;float iat;float fuel_press_kpa;uint32_t engine_time_s;float input_voltage;float charge_temp;float injector_duty_cycle;float fuel_flow_rate;uint16_t rpm;uint16_t rpm_cmd;uint16_t throttle_pulse;int16_t cyl_head_temp;uint16_t ignition_angle_1;uint16_t ignition_angle_2;uint8_t status_flags;uint8_t pwm_source;uint8_t governor_status;uint8_t cpu_load;uint8_t[4] _padding0;";

ORB_DEFINE(currawong_status, struct currawong_status_s, 68, __orb_currawong_status_fields);


void print_message(const currawong_status_s& message)
{

	PX4_INFO_RAW(" currawong_status_s\n");
	if (message.timestamp != 0) {
		PX4_INFO_RAW("\ttimestamp: %" PRIu64 "  (%.6f seconds ago)\n", message.timestamp, hrt_elapsed_time(&message.timestamp) / 1e6);
	} else {
		PX4_INFO_RAW("\n");
	}
	PX4_INFO_RAW("\tthrottle_pct: %.4f\n", (double)message.throttle_pct);
	PX4_INFO_RAW("\tfuel_used_ml: %" PRIu32 "\n", message.fuel_used_ml);
	PX4_INFO_RAW("\tbaro_kpa: %.4f\n", (double)message.baro_kpa);
	PX4_INFO_RAW("\tmanifold_kpa: %.4f\n", (double)message.manifold_kpa);
	PX4_INFO_RAW("\tiat: %.4f\n", (double)message.iat);
	PX4_INFO_RAW("\tfuel_press_kpa: %.4f\n", (double)message.fuel_press_kpa);
	PX4_INFO_RAW("\tengine_time_s: %" PRIu32 "\n", message.engine_time_s);
	PX4_INFO_RAW("\tinput_voltage: %.4f\n", (double)message.input_voltage);
	PX4_INFO_RAW("\tcharge_temp: %.4f\n", (double)message.charge_temp);
	PX4_INFO_RAW("\tinjector_duty_cycle: %.4f\n", (double)message.injector_duty_cycle);
	PX4_INFO_RAW("\tfuel_flow_rate: %.4f\n", (double)message.fuel_flow_rate);
	PX4_INFO_RAW("\trpm: %u\n", message.rpm);
	PX4_INFO_RAW("\trpm_cmd: %u\n", message.rpm_cmd);
	PX4_INFO_RAW("\tthrottle_pulse: %u\n", message.throttle_pulse);
	PX4_INFO_RAW("\tcyl_head_temp: %d\n", message.cyl_head_temp);
	PX4_INFO_RAW("\tignition_angle_1: %u\n", message.ignition_angle_1);
	PX4_INFO_RAW("\tignition_angle_2: %u\n", message.ignition_angle_2);
	PX4_INFO_RAW("\tstatus_flags: %u\n", message.status_flags);
	PX4_INFO_RAW("\tpwm_source: %u\n", message.pwm_source);
	PX4_INFO_RAW("\tgovernor_status: %u\n", message.governor_status);
	PX4_INFO_RAW("\tcpu_load: %u\n", message.cpu_load);
	
}
